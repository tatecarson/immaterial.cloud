{"id":"index.js","dependencies":[{"name":"/Users/tatecarson/webDev/vibration-music/granular/package.json","includedInParent":true,"mtime":1585839294072},{"name":"granular-js","loc":{"line":1,"column":21},"parent":"/Users/tatecarson/webDev/vibration-music/granular/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/granular-js/index.js"},{"name":"rhythmical","loc":{"line":2,"column":23},"parent":"/Users/tatecarson/webDev/vibration-music/granular/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/rhythmical/lib/index.js"},{"name":"p5","loc":{"line":3,"column":15},"parent":"/Users/tatecarson/webDev/vibration-music/granular/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/p5/lib/p5.js"},{"name":"p5/lib/addons/p5.sound","loc":{"line":4,"column":7},"parent":"/Users/tatecarson/webDev/vibration-music/granular/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/p5/lib/addons/p5.sound.js"}],"generated":{"js":"\"use strict\";\n\nvar _granularJs = _interopRequireDefault(require(\"granular-js\"));\n\nvar _rhythmical = require(\"rhythmical\");\n\nvar _p = _interopRequireDefault(require(\"p5\"));\n\nrequire(\"p5/lib/addons/p5.sound\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// TODO: get working on mobile deployed\n// TODO: add peerjs chatroom capabilities to this \nasync function getData(url) {\n  return new Promise(resolve => {\n    const request = new XMLHttpRequest();\n    request.open('GET', url, true);\n    request.responseType = 'arraybuffer';\n\n    request.onload = function () {\n      const audioData = request.response;\n      resolve(audioData);\n    };\n\n    request.send();\n  });\n}\n\nfunction startContext() {\n  console.log('Tone is: ', Tone.context.state);\n  document.getElementById('context').addEventListener('click', () => {\n    Tone.context.resume();\n    console.log('Tone is: ', Tone.context.state);\n  });\n}\n\nstartContext();\n\nasync function init() {\n  const audioContext = _p.default.prototype.getAudioContext(); // otherData = await getData('bowedWav.wav')\n\n\n  const data = await getData('example.wav'); // TODO: add some total-serialism\n\n  const afrobell4 = [1, [0, 0.2], 0.1, [0, 1]];\n  const afrobell3 = [3, [4, 3], 5, [1, 4]];\n\n  class PlayNotes {\n    constructor(notes, cycle) {\n      this.notes = notes;\n      this.cycle = cycle; // this.data = data\n    }\n\n    makeGrain() {\n      this.grain = new _granularJs.default({\n        audioContext,\n        envelope: {\n          attack: 0.2,\n          release: 0.5\n        },\n        density: 0.7,\n        spread: 0.6,\n        pitch: 1\n      });\n      this.grain.on('settingBuffer', () => console.log('setting buffer'));\n      this.grain.on('bufferSet', () => console.log('buffer set'));\n      this.grain.on('grainCreated', () => console.log('grain created'));\n      return this.grain;\n    }\n\n    setGrain(data) {\n      this.grain.setBuffer(data);\n    }\n\n    makePart(grain) {\n      // TODO: replace this with p5.part\n      // https://p5js.org/reference/#/p5.Part\n      this.events = _rhythmical.Rhythm.render(this.notes, this.cycle);\n      return new Tone.Part({\n        callback: (time, event) => {\n          // console.log(event)\n          grain.set({\n            pitch: event.value\n          });\n        },\n        events: this.events,\n        loop: true,\n        loopEnd: this.cycle\n      }).start();\n    }\n\n  }\n\n  const instrument = new PlayNotes(afrobell4, 2, '');\n  const grain = instrument.makeGrain();\n  console.log(grain);\n  await instrument.setGrain(data);\n  instrument.makePart(grain);\n  const resume = document.getElementById('resume');\n  resume.addEventListener('click', () => {\n    const id = grain.startVoice({\n      position: 0.1,\n      gain: 0.5\n    });\n  });\n}\n\ninit();"},"sourceMaps":null,"error":null,"hash":"53389a4115476000ceb699e9698b2892","cacheData":{"env":{}}}