{"id":"index.js","dependencies":[{"name":"/Users/tatecarson/webDev/vibration-music/granular/package.json","includedInParent":true,"mtime":1586051670864},{"name":"granular-js","loc":{"line":1,"column":21},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/granular-js/index.js"},{"name":"p5","loc":{"line":3,"column":15},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/p5/lib/p5.js"},{"name":"p5/lib/addons/p5.sound","loc":{"line":4,"column":7},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/p5/lib/addons/p5.sound.js"},{"name":"./getData","loc":{"line":6,"column":20},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/src/getData.js"},{"name":"./Waveform","loc":{"line":8,"column":21},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/src/Waveform.js"},{"name":"./Grains","loc":{"line":9,"column":19},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/src/Grains.js"},{"name":"./DragAndDrop","loc":{"line":10,"column":24},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/src/DragAndDrop.js"},{"name":"./AutoPlay","loc":{"line":11,"column":21},"parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/src/AutoPlay.js"},{"name":"process","parent":"/Users/tatecarson/webDev/vibration-music/granular/src/index.js","resolved":"/Users/tatecarson/webDev/vibration-music/granular/node_modules/process/browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\n\nvar _granularJs = _interopRequireDefault(require(\"granular-js\"));\n\nvar _p = _interopRequireDefault(require(\"p5\"));\n\nrequire(\"p5/lib/addons/p5.sound\");\n\nvar _getData = _interopRequireDefault(require(\"./getData\"));\n\nvar _Waveform = _interopRequireDefault(require(\"./Waveform\"));\n\nvar _Grains = _interopRequireDefault(require(\"./Grains\"));\n\nvar _DragAndDrop = _interopRequireDefault(require(\"./DragAndDrop\"));\n\nvar _AutoPlay = _interopRequireDefault(require(\"./AutoPlay\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// TODO: explore around\n// TODO: add camera recognition from vida \n// TODO: add peerjs chatroom capabilities to this \nconst PRESETS = [{\n  name: 1,\n  url: 'samples/D135BPM1.wav'\n}, {\n  name: '2',\n  url: 'samples/doit2.wav'\n}, {\n  name: 3,\n  url: 'samples/four1.wav'\n}, {\n  name: 4,\n  url: 'samples/gotit1.wav'\n}];\nconst pillPlay = document.getElementById('pill-play'),\n      pillLoading = document.getElementById('pill-loading'),\n      pillTitle = document.getElementById('pill-title'),\n      canvases = document.getElementById('canvases'),\n      presets = document.getElementById('presets');\nlet autoPlay, dragAndDrop, granular;\nconst AUDIO_BUFFER_CACHE = {};\n\nfunction stopPropagation(event) {\n  event.stopPropagation();\n}\n\nasync function loadUserData(data) {\n  autoPlay.stop();\n  pillPlay.textContent = 'Play';\n  pillLoading.classList.remove('hidden');\n  pillPlay.classList.add('inactive');\n  presets.classList.add('inactive');\n  const buttons = Array.from(document.querySelectorAll('#presets .preset'));\n  buttons.forEach(b => b.classList.add('pill-inverted'));\n  await granular.setBuffer(data);\n  pillLoading.classList.add('hidden');\n  pillPlay.classList.remove('inactive');\n  presets.classList.remove('inactive');\n}\n\nasync function loadPreset({\n  name,\n  url\n}) {\n  if (process.ENV === 'development') {\n    console.log(`load preset ${name}`);\n  }\n\n  autoPlay.stop();\n  pillPlay.textContent = 'Play';\n  pillLoading.classList.remove('hidden');\n  pillPlay.classList.add('inactive');\n  presets.classList.add('inactive');\n  let data;\n  data = await (0, _getData.default)(url);\n  console.log(\"loadPreset -> url\", url);\n  const audioBuffer = await granular.setBuffer(data);\n  console.log(\"loadPreset -> audioBuffer\", audioBuffer);\n  AUDIO_BUFFER_CACHE[name] = audioBuffer;\n  pillLoading.classList.add('hidden');\n  pillPlay.classList.remove('inactive');\n  presets.classList.remove('inactive');\n}\n\nfunction createPresets(data, text) {\n  PRESETS.forEach(preset => {\n    const {\n      name\n    } = preset;\n    console.log(\"createPresets -> preset\", preset);\n    const button = document.createElement('div');\n    button.classList.add('preset', 'pill', 'pill-inverted', 'pill-button');\n    button.textContent = name;\n    button.addEventListener('click', () => {\n      const buttons = Array.from(document.querySelectorAll('#presets .preset'));\n      buttons.forEach(b => {\n        if (button === b) {\n          b.classList.remove('pill-inverted');\n        } else {\n          b.classList.add('pill-inverted');\n        }\n      });\n      loadPreset(preset);\n    });\n    presets.appendChild(button);\n  });\n}\n\nasync function init() {\n  const audioContext = _p.default.prototype.getAudioContext();\n\n  granular = new _granularJs.default({\n    audioContext,\n    envelope: {\n      attack: 0,\n      decay: 0.5\n    },\n    density: 0.8,\n    spread: 0.1,\n    pitch: 1\n  });\n  const delay = new _p.default.Delay();\n  delay.process(granular, 0.5, 0.5, 3000); // source, delayTime, feedback, filter frequency\n\n  const reverb = new _p.default.Reverb(); // due to a bug setting parameters will throw error\n  // https://github.com/processing/p5.js/issues/3090\n\n  reverb.process(delay); // source, reverbTime, decayRate in %, reverse\n\n  reverb.amp(3);\n  const compressor = new _p.default.Compressor();\n  compressor.process(reverb, 0.005, 6, 10, -24, 0.05); // [attack], [knee], [ratio], [threshold], [release]\n\n  const waveform = new _Waveform.default();\n  new _Grains.default(granular);\n  dragAndDrop = new _DragAndDrop.default(canvases);\n  dragAndDrop.on('fileRead', async ({\n    data\n  }) => {\n    loadUserData(data);\n  });\n  granular.on('bufferSet', ({\n    buffer\n  }) => {\n    waveform.draw(buffer);\n  });\n  autoPlay = new _AutoPlay.default(granular);\n  pillPlay.addEventListener('click', event => {\n    event.preventDefault();\n    event.stopPropagation();\n\n    if (autoPlay.isRunning()) {\n      autoPlay.stop();\n      pillPlay.textContent = 'Play';\n    } else {\n      autoPlay.start();\n      pillPlay.textContent = 'Stop';\n    }\n  });\n  window.addEventListener('keydown', key => {\n    // space\n    if (event.keyCode === 32) {\n      if (autoPlay.isRunning()) {\n        autoPlay.stop();\n        pillPlay.textContent = 'Play';\n      } else {\n        autoPlay.start();\n        pillPlay.textContent = 'Stop';\n      }\n    }\n  });\n  createPresets();\n  const buttons = Array.from(document.querySelectorAll('#presets .preset'));\n  buttons.concat([pillPlay, pillTitle]).forEach(element => {\n    ['click', 'mousedown', 'touchstart'].forEach(event => {\n      element.addEventListener(event, stopPropagation);\n    });\n  });\n  buttons[0].classList.remove('pill-inverted');\n  await loadPreset(PRESETS[0]);\n  pillPlay.classList.add('animated', 'pulse');\n}\n\ninit();"},"sourceMaps":null,"error":null,"hash":"50b96c91960c31cbc9df87b3ebf098ba","cacheData":{"env":{}}}